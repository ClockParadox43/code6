    DP 本质是枚举了所有的方案, 但是枚举的方式是有规划的
举个例子, 如果用暴搜求最值, 在参数相同的情况下会枚举到相同的值, 会进行多次的重复计算
那么它的方案一定是指数级别
    
    集合角度思考DP
        part1.状态表示f[i,j]: 
                它可以表示一类东西, 表示的是一个集合里的方案数
                因为最终的答案会落实到某一个数上, 该数字表示的东西就是集合的属性
                属性有三种:max/min/num
                    - 和起来就是, i/j 分别代表什么? 针对 i/j 枚举? 从最初的转态转移到 f[i,j] 的属性是什么

        part2.状态计算(状态的划分)
                最终的划分依据, 基本上有 "最后" 这个概念, 从结果倒想到 "最后一步" 划分的时刻, 利用 "最后" 这个点划分
                划分依据的原则: 
                    1.不重: 在求 num 的时候一定要满足, 但是求 max/min 这样的最值时就不用满足
                                - 举个例子 LST 问题中的转移方程 f[i][j] = max(f[i-1][j], f[i][j-1])
                                  这两种状态其实包含了 f[i-1][j-1], 也就是说 f[i-1][j-1] 和上述两种状态重复 
                                  但是因为求的是 "最值" 所以结果并不影响
                    2.不漏
                        - 求集合的交集即可